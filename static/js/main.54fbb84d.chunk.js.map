{"version":3,"sources":["components/characterTable.component.jsx","components/characters.component.jsx","App.js","index.js"],"names":["CharacterTable","props","data","items","columns","Header","accessor","sortMethod","a","b","defaultPageSize","Character","inputRef","useRef","useState","setData","singleData","setSingleData","useEffect","axios","result","results","fetchData","className","ref","type","onClick","current","value","fetchSingleData","fetchButtonClicked","count","map","index","style","width","name","gender","height","color","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTA6CeA,G,MAzCQ,SAACC,GAkClB,OAAO,kBAAC,IAAD,CACLC,KAAMD,EAAME,MACZC,QAnCY,CACd,CACEC,OAAQ,OACRC,SAAU,QACV,CACAD,OAAQ,SACRC,SAAU,SACVC,WAAY,SAACC,EAAGC,GACd,OAAOD,EAAEC,IAEX,CACAJ,OAAQ,OACRC,SAAU,OACVC,WAAY,SAACC,EAAGC,GACd,OAAOD,EAAEC,IAEX,CACAJ,OAAQ,aACRC,SAAU,cACV,CACAD,OAAQ,aACRC,SAAU,cACV,CACAD,OAAQ,YACRC,SAAU,aACV,CACAD,OAAQ,aACRC,SAAU,cACV,CACAD,OAAQ,SACRC,SAAU,WAMVI,gBAAiB,OCoBVC,EAzDG,WAChB,IAAMC,EAAWC,mBADK,EAEEC,mBAAS,IAFX,mBAEfZ,EAFe,KAETa,EAFS,OAGcD,mBAAS,IAHvB,mBAGfE,EAHe,KAGHC,EAHG,KAItBC,qBAAU,WAAI,4CACZ,4BAAAV,EAAA,sEACuBW,IACnB,iCAFJ,OACQC,EADR,OAIEL,EAAQK,EAAOlB,KAAKmB,SAJtB,4CADY,uBAAC,WAAD,wBAOZC,KACC,IAYH,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,uBACb,iDACA,2BAAOC,IAAKZ,EAAUa,KAAK,OAAOF,UAAU,eAC5C,4BAAQG,QAAS,YAhBI,WAAK,4CAE9B,4BAAAlB,EAAA,sEACuBW,IAAM,wCAAD,OACgBP,EAASe,QAAQC,QAF7D,OACQR,EADR,OAIEH,EAAcG,EAAOlB,MAJvB,4CAF8B,0DAS9B2B,GAO0BC,IAAuBP,UAAU,gBAAvD,UAEDP,EAAWe,OAAQ,GAAKf,EACzBA,EAAWK,QAAQW,KAAI,SAACZ,EAAOa,GAC7B,OACE,yBAAKV,UAAU,OAAOW,MAAO,CAACC,MAAM,UAClC,yBAAKZ,UAAU,aACb,wBAAIA,UAAU,cAAd,gBAAqCH,EAAOgB,OAC5C,uBAAGb,UAAU,aAAb,kBAAqCH,EAAOiB,SAC5C,uBAAGd,UAAU,aAAb,kBAAqCH,EAAOkB,cAKlD,KACoB,IAArBtB,EAAWe,OAAef,EAC3B,yBAAKkB,MAAO,CAACK,MAAM,QAAnB,qBAAmD,KAClDrC,EAAKsC,OAAS,EACf,6BACE,kBAAC,EAAD,CAAgBrC,MAAOD,KAEvB,OC1COuC,MARf,WACE,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,QCDNmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.54fbb84d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactTable from 'react-table-6'\nimport 'react-table-6/react-table.css'\n\nconst CharacterTable = (props) => {\n    const columns = [ \n      {\n        Header: 'Name',\n        accessor: 'name' \n      },{\n        Header: 'Height',\n        accessor: 'height',\n        sortMethod: (a, b) => {\n          return a-b\n        }\n      },{\n        Header: 'Mass',\n        accessor: 'mass',\n        sortMethod: (a, b) => {\n          return a-b\n        } \n      },{\n        Header: 'Hair color',\n        accessor: 'hair_color' \n      },{\n        Header: 'Skin Color',\n        accessor: 'skin_color' \n      },{\n        Header: 'Eye Color',\n        accessor: 'eye_color' \n      },{\n        Header: 'Birth Year',\n        accessor: 'birth_year' \n      },{\n        Header: 'Gender',\n        accessor: 'gender' \n      }]\n     \n      return <ReactTable\n        data={props.items}\n        columns={columns}\n        defaultPageSize={10}\n      />\n};\n\nexport default CharacterTable;","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from 'axios';\nimport CharacterTable from './characterTable.component'\n\nconst Character = () => {\n  const inputRef = useRef()\n  const [data, setData] = useState([])\n  const [singleData, setSingleData] = useState({})\n  useEffect(()=>{\n    async function fetchData(){\n      const result = await axios(\n        'https://swapi.dev/api/people/',\n      );\n      setData(result.data.results)\n    }\n    fetchData()   \n  }, [])\n  const fetchButtonClicked = () =>{\n    debugger\n    async function fetchSingleData(){\n      const result = await axios(\n        `https://swapi.dev/api/people/?search=${inputRef.current.value}`,\n      );\n      setSingleData(result.data)\n      //setData(result.data.results)\n    }\n    fetchSingleData()\n  }\n  return (\n    <div className=\"controls\">\n      <div className=\"input-container p-3\">\n        <span>Character Name:</span>\n        <input ref={inputRef} type=\"text\" className=\"text-input\" />\n        <button onClick={()=>{fetchButtonClicked()}} className=\"fetch-button\">Fetch</button>\n      </div>\n      {singleData.count >=1 && singleData ? \n      singleData.results.map((result,index)=>{\n        return (\n          <div className=\"card\" style={{width: `18rem`}}>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{`Name: ${result.name}`}</h5>\n              <p className=\"card-text\">{`Gender: ${result.gender}`}</p>\n              <p className=\"card-text\">{`Height: ${result.height}`}</p>\n            </div>\n          </div> \n        )\n      })\n      : null}\n      {singleData.count === 0 && singleData ?\n      <div style={{color:`red`}}>Data Not Found!!!</div>:null}\n      {data.length > 0 ? \n      <div>\n        <CharacterTable items={data}></CharacterTable> \n      </div>   \n      : null}\n    </div>\n    // Display list of all characters here when page loads\n    // Once a character name is entered and fetch button is clicked, fetch it's details (name, gender, height)  and display character details in a card\n  );\n};\n\nexport default Character;\n","import React from \"react\";\nimport \"./App.css\";\nimport Character from \"./components/characters.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Character />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}